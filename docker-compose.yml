version: '3.9'

services:
  nginx:
    build:
      context: ./nginx/local
    ports:
      - "8112:80"
    depends_on:
      - app
    volumes:
      - dev-static-data:/vol/web

  redis:
    image: 'redis'

  app:
    build:
      context: .
      args:
        - DEV='True'
    expose:
      - 8000
    volumes:
      - ./app:/app
      - db_backup:/backups
      - dev-static-data:/vol/web
      - logs:/log
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             python manage.py compilemessages &&
             python manage.py db_backup_task &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000 --reload -e DJANGO_SETTINGS_MODULE=app.settings.local"

    ports:
      - '8000:8000'
    env_file:
      - ./envs/local/.django
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    env_file:
      - ./envs/local/.postgres
    volumes:
      - dev-db-data:/var/lib/postgresql/data
      - db_backup:/backups
    ports:
      - "54320:5432"

  celery:
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
      - db_backup:/backups
      - dev-static-data:/vol/web
      - logs:/log
    env_file:
      - ./envs/local/.django
    depends_on:
      - app
      - db
      - redis

  celery-beat:
    restart: always
    build:
      context: .
    volumes:
      - ./app:/app
      - db_backup:/backups
      - dev-static-data:/vol/web
      - logs:/log
    image: drf-api
    command: celery -A app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./envs/local/.django
    depends_on:
      - app
      - db
      - redis


volumes:
  dev-db-data:
  db_backup:
  dev-static-data:
  logs: